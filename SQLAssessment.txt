1. Select all Actors from the table.
SELECT *
FROM actor;

2. Find the actors with the first name "John".
SELECT *
FROM actor
WHERE first_name = "John";

3. Find all actors with the surname "Neeson".
SELECT *
FROM actor
WHERE last_name = "Neeson";

4.	Find all actors with Id numbers divisible by 10.
SELECT *
FROM actor
WHERE actor_id%10 = 0;

5.	What is the description of the movie with ID of 100?
SELECT film_id, description
FROM film
WHERE film_id = 100;

6.	Find every movie with a rating of “R”.
SELECT *
FROM film
WHERE rating = 'R';

7.	Find every movie except those with a rating of “R”.
SELECT *
FROM film
WHERE rating != 'R';

8.	Find the 10 shortest movies.
SELECT *
FROM film
ORDER BY length ASC
LIMIT 10;

9.	Now return only the movie titles.
SELECT title
FROM film
ORDER BY length ASC
LIMIT 10;

10.	Find all movies with Deleted Scenes.
SELECT *
FROM film
WHERE special_features = 'Deleted Scenes';

11.	Which last names are not repeated?
SELECT DISTINCT last_name
FROM actor;

12.	Which last names appear more than once?
SELECT last_name, COUNT(last_name) AS NumOfOcc
FROM actor
GROUP BY last_name
HAVING (COUNT(last_name) >1);

13.	Which actor has appeared in the most films?
SELECT fa.actor_id, a.first_name, a.last_name, COUNT(fa.actor_id) AS NumOfOcc
FROM film_actor fa
JOIN actor a ON fa.actor_id = a.actor_id
GROUP BY actor_id
ORDER BY NumOfOcc DESC
LIMIT 1;

14.	Is ‘Academy Dinosaur’ available for rent from Store 1?
SELECT f.title, i.store_id
FROM film f
JOIN inventory i ON i.film_id = f.film_id
WHERE f.title = 'Academy Dinosaur'
GROUP BY i.store_id;

15.	When is ‘Academy Dinosaur’ due?


16.	What is that average running time of all the films in the database?
SELECT AVG(length) AS AVGLength
FROM film;

17.	What is the average running time of films by category?
SELECT AVG(f.length) AS AVGLength, c.name
FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
GROUP BY c.name;

18.	How many movies have Robots in them?
SELECT *
FROM film
WHERE description LIKE '%Robot%';

19.	Find the movie(s) with the longest runtime.
SELECT *
FROM film
ORDER BY length DESC
LIMIT 10;

20.	Count how many movies were released in 2010.
SELECT release_year, COUNT(release_year) AS NumOfMovies
FROM film
WHERE release_year = 2010;

21.	Find the titles of all horror movies.
SELECT f.title
FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
WHERE c.name = "Horror";

22.	Return the full name of the staff member – in a column named full_name – with the ID of 1.
SELECT CONCAT(first_name,' ', last_name) AS full_name
FROM staff
WHERE staff_id = 1;

23.	Retrieve all movies that Fred Costner has appeared in.
SELECT f.title
FROM film f
JOIN film_actor fa ON fa.film_id = f.film_id
JOIN actor a ON fa.actor_id = a.actor_id
WHERE a.first_name = 'Fred'
AND a.last_name = 'Costner';

24.	Find out which location has the most copies of BUCKET BROTHERHOOD.


25.	How many distinct countries are there?
SELECT COUNT(country) AS NumOfCountries
FROM country;

1.	What are the names of all the languages in the database (sorted alphabetically)?
SELECT name
FROM language
ORDER BY name ASC;

26.	Return the full names (first and last) of actors with “son” in their last name, ordered by their first name.
SELECT CONCAT(first_name,' ', last_name) AS full_name
FROM actor
WHERE last_name LIKE '%son%'
ORDER BY first_name ASC;

27.	Create a list of categories and the number of films for each category.
SELECT c.name, COUNT(f.film_id) AS NumOfMovies
FROM film f
JOIN film_category fc ON fc.film_id = f.film_id
JOIN category c ON c.category_id = fc.category_id
GROUP BY c.name;

28.	Create a list of actors and the number of movies by each actor.
SELECT CONCAT(a.first_name,' ', a.last_name) AS full_name, COUNT(f.film_id) AS NumOfMovies
FROM film f
JOIN film_actor fa ON fa.film_id = f.film_id
JOIN actor a ON fa.actor_id = a.actor_id
GROUP BY full_name;

29.	Which actor/actress has appeared in the most movies?
SELECT CONCAT(a.first_name,' ', a.last_name) AS full_name, COUNT(f.film_id) AS NumOfMovies
FROM film f
JOIN film_actor fa ON fa.film_id = f.film_id
JOIN actor a ON fa.actor_id = a.actor_id
GROUP BY full_name
ORDER BY NumOfMovies DESC
LIMIT 1;